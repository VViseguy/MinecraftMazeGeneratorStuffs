package com.jacob;

//import static com.jacob.BlockType.*;

public enum MazeSectionType {
    /**
     * +X (eastward) +Y (upward) +Z (southward)
     * int[z][y][x]
     *  o---> +X (eastward) =>> +Y (upward)
     *  |
     *  |
     * \/ +Z (southward)
     */
    NSHallway(new int[][][]{
            {{ 0, 0, 0, 0, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0, 0, 0, 0, 0}},
            {{ 0, 0, 0, 0, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0, 0, 0, 0, 0}},
            {{ 0, 0, 0, 0, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0, 0, 0, 0, 0}},
            {{ 0, 0, 0, 0, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0, 0, 0, 0, 0}},
            {{ 0, 0, 0, 0, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0, 0, 0, 0, 0}}
    }),
    EWHallway(new int[][][]{
            {{ 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}},
            {{ 0, 0, 0, 0, 0}, {-1,-1,-1,-1,-1}, {-1,-1,-1,-1,-1}, {-1,-1,-1,-1,-1}, { 0, 0, 0, 0, 0}},
            {{ 0, 0, 0, 0, 0}, {-1,-1,-1,-1,-1}, {-1,-1,-1,-1,-1}, {-1,-1,-1,-1,-1}, { 0, 0, 0, 0, 0}},
            {{ 0, 0, 0, 0, 0}, {-1,-1,-1,-1,-1}, {-1,-1,-1,-1,-1}, {-1,-1,-1,-1,-1}, { 0, 0, 0, 0, 0}},
            {{ 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}}
    }),
    NECorner(new int[][][]{
            {{ 0, 0, 0, 0, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0, 0, 0, 0, 0}},
            {{ 0, 0, 0, 0, 0}, { 0,-1,-1,-1,-1}, { 0,-1,-1,-1,-1}, { 0,-1,-1,-1,-1}, { 0, 0, 0, 0, 0}},
            {{ 0, 0, 0, 0, 0}, { 0,-1,-1,-1,-1}, { 0,-1,-1,-1,-1}, { 0,-1,-1,-1,-1}, { 0, 0, 0, 0, 0}},
            {{ 0, 0, 0, 0, 0}, { 0,-1,-1,-1,-1}, { 0,-1,-1,-1,-1}, { 0,-1,-1,-1,-1}, { 0, 0, 0, 0, 0}},
            {{ 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}}
    }),
    SECorner(new int[][][]{
            {{ 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}},
            {{ 0, 0, 0, 0, 0}, { 0,-1,-1,-1,-1}, { 0,-1,-1,-1,-1}, { 0,-1,-1,-1,-1}, { 0, 0, 0, 0, 0}},
            {{ 0, 0, 0, 0, 0}, { 0,-1,-1,-1,-1}, { 0,-1,-1,-1,-1}, { 0,-1,-1,-1,-1}, { 0, 0, 0, 0, 0}},
            {{ 0, 0, 0, 0, 0}, { 0,-1,-1,-1,-1}, { 0,-1,-1,-1,-1}, { 0,-1,-1,-1,-1}, { 0, 0, 0, 0, 0}},
            {{ 0, 0, 0, 0, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0, 0, 0, 0, 0}}
    }),
    NWCorner(new int[][][]{
            {{ 0, 0, 0, 0, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0, 0, 0, 0, 0}},
            {{ 0, 0, 0, 0, 0}, {-1,-1,-1,-1, 0}, {-1,-1,-1,-1, 0}, {-1,-1,-1,-1, 0}, { 0, 0, 0, 0, 0}},
            {{ 0, 0, 0, 0, 0}, {-1,-1,-1,-1, 0}, {-1,-1,-1,-1, 0}, {-1,-1,-1,-1, 0}, { 0, 0, 0, 0, 0}},
            {{ 0, 0, 0, 0, 0}, {-1,-1,-1,-1, 0}, {-1,-1,-1,-1, 0}, {-1,-1,-1,-1, 0}, { 0, 0, 0, 0, 0}},
            {{ 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}}
    }),
    SWCorner(new int[][][]{
            {{ 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}},
            {{ 0, 0, 0, 0, 0}, {-1,-1,-1,-1, 0}, {-1,-1,-1,-1, 0}, {-1,-1,-1,-1, 0}, { 0, 0, 0, 0, 0}},
            {{ 0, 0, 0, 0, 0}, {-1,-1,-1,-1, 0}, {-1,-1,-1,-1, 0}, {-1,-1,-1,-1, 0}, { 0, 0, 0, 0, 0}},
            {{ 0, 0, 0, 0, 0}, {-1,-1,-1,-1, 0}, {-1,-1,-1,-1, 0}, {-1,-1,-1,-1, 0}, { 0, 0, 0, 0, 0}},
            {{ 0, 0, 0, 0, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0, 0, 0, 0, 0}}
    }),
    Cross(new int[][][]{
            {{ 0, 0, 0, 0, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0, 0, 0, 0, 0}},
            {{ 0, 0, 0, 0, 0}, {-1,-1,-1,-1,-1}, {-1,-1,-1,-1,-1}, {-1,-1,-1,-1,-1}, { 0, 0, 0, 0, 0}},
            {{ 0, 0, 0, 0, 0}, {-1,-1,-1,-1,-1}, {-1,-1,-1,-1,-1}, {-1,-1,-1,-1,-1}, { 0, 0, 0, 0, 0}},
            {{ 0, 0, 0, 0, 0}, {-1,-1,-1,-1,-1}, {-1,-1,-1,-1,-1}, {-1,-1,-1,-1,-1}, { 0, 0, 0, 0, 0}},
            {{ 0, 0, 0, 0, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0, 0, 0, 0, 0}}
    }),
    NEnd(new int[][][]{
        {{ 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}},
        {{ 0, 0, 0, 0, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0, 0, 0, 0, 0}},
        {{ 0, 0, 0, 0, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0, 0, 0, 0, 0}},
        {{ 0, 0, 0, 0, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0, 0, 0, 0, 0}},
        {{ 0, 0, 0, 0, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0, 0, 0, 0, 0}}
    }),
    EEnd(new int[][][]{
        {{ 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}},
        {{ 0, 0, 0, 0, 0}, {-1,-1,-1,-1, 0}, {-1,-1,-1,-1, 0}, {-1,-1,-1,-1, 0}, { 0, 0, 0, 0, 0}},
        {{ 0, 0, 0, 0, 0}, {-1,-1,-1,-1, 0}, {-1,-1,-1,-1, 0}, {-1,-1,-1,-1, 0}, { 0, 0, 0, 0, 0}},
        {{ 0, 0, 0, 0, 0}, {-1,-1,-1,-1, 0}, {-1,-1,-1,-1, 0}, {-1,-1,-1,-1, 0}, { 0, 0, 0, 0, 0}},
        {{ 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}}
    }),
    SEnd(new int[][][]{
        {{ 0, 0, 0, 0, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0, 0, 0, 0, 0}},
        {{ 0, 0, 0, 0, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0, 0, 0, 0, 0}},
        {{ 0, 0, 0, 0, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0, 0, 0, 0, 0}},
        {{ 0, 0, 0, 0, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0,-1,-1,-1, 0}, { 0, 0, 0, 0, 0}},
        {{ 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}}
    }),
    WEnd(new int[][][]{
        {{ 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}},
        {{ 0, 0, 0, 0, 0}, { 0,-1,-1,-1,-1}, { 0,-1,-1,-1,-1}, { 0,-1,-1,-1,-1}, { 0, 0, 0, 0, 0}},
        {{ 0, 0, 0, 0, 0}, { 0,-1,-1,-1,-1}, { 0,-1,-1,-1,-1}, { 0,-1,-1,-1,-1}, { 0, 0, 0, 0, 0}},
        {{ 0, 0, 0, 0, 0}, { 0,-1,-1,-1,-1}, { 0,-1,-1,-1,-1}, { 0,-1,-1,-1,-1}, { 0, 0, 0, 0, 0}},
        {{ 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}, { 0, 0, 0, 0, 0}}
    });
    private int[][][] blockData;

    MazeSectionType(int[][][] blockData) {
        this.blockData = blockData;
    }

    public int[][][] getBlockData() {
        return blockData;
    }
}
